
from decimal import Decimal, getcontext

getcontext().prec = 50

prices = [
    [1, 5, 100],
    [2, 5.1, 250],
    [3, 5.2, 500],
    [4, 5.4, 850],
    [5, 5.7, 1350],
    [6, 6, 2100],
    [7, 6.3, 3100],
    [8, 6.6, 4500],
    [9, 7, 6300],
    [10, 7.4, 8500],
    [11, 7.8, 11500],
    [12, 8.3, 15500],
    [13, 8.8, 20500],
    [14, 9.4, 27000],
    [15, 10, 35000],
    [16, 10.7, 46500],
    [17, 11.4, 62000],
    [18, 12.2, 84000],
    [19, 13, 115000],
    [20, 14, 158000],
    [21, 15, 210000],
    [22, 16, 265000],
    [23, 18, 300000],
    [24, 20, 350000],
    [25, 22, 400000],
    [26, 24, 470000],
    [27, 27, 550000],
    [28, 30, 635000],
    [29, 33, 730000],
    [30, 36, 850000],
    [31, 40, 1000000],
    [32, 44, 1200000],
    [33, 48, 1400000],
    [34, 52, 1650000],
    [35, 56, 2000000],
    [36, 60, 2450000],
    [37, 65, 2950000],
    [38, 70, 3400000],
    [39, 75, 3950000],
    [40, 80, 4650000],
    [41, 85, 5550000],
    [42, 90, 6500000],
    [43, 95, 7600000],
    [44, 100, 8800000],
    [45, 106, 10000000],
    [46, 112, 11500000],
    [47, 120, 13000000],
    [48, 128, 14500000],
    [49, 136, 16000000],
    [50, 145, 17500000]
]

update = [
    [1, 225, 0],
    [2, 909, 5],
    [3, 2066, 10],
    [4, 3726, 25],
    [5, 5940, 50],
    [6, 8748, 75],
    [7, 12190, 100],
    [8, 16308, 150],
    [9, 21182, 200],
    [10, 26865, 250],
    [11, 33412, 300],
    [12, 40932, 345],
    [13, 49491, 395],
    [14, 59220, 455],
    [15, 70200, 520],
    [16, 82584, 600],
    [17, 96466, 685],
    [18, 112023, 785],
    [19, 129362, 895],
    [20, 148770, 1015],
    [21, 170384, 1145],
    [22, 194337, 1295],
    [23, 221800, 1455],
    [24, 253044, 1650],
    [25, 288338, 1880],
    [26, 327951, 2150],
    [27, 373370, 2450],
    [28, 424998, 2810],
    [29, 483242, 3240],
    [30, 548505, 3730],
    [31, 622588, 4270],
    [32, 706032, 4880],
    [33, 799376, 5570],
    [34, 903159, 6345],
    [35, 1017922, 7160],
    [36, 1144206, 8050],
    [37, 1284214, 9020],
    [38, 1438623, 10050],
    [39, 1608106, 11170],
    [40, 1793340, 12350],
    [41, 1994998, 13620],
    [42, 2213757, 14970],
    [43, 2450290, 16400],
    [44, 2705274, 17870],
    [45, 2981408, 19400],
    [46, 3279501, 21000],
    [47, 3604594, 22700],
    [48, 3957768, 24600],
    [49, 4340102, 26670],
    [50, 4754925, 28950]
]

taxes = [
    [1, 900],
    [2, 1836],
    [3, 2808],
    [4, 3888],
    [5, 5130],
    [6, 6480],
    [7, 7938],
    [8, 9504],
    [9, 11340],
    [10, 13320],
    [11, 15444],
    [12, 17928],
    [13, 20592],
    [14, 23688],
    [15, 27000],
    [16, 30816],
    [17, 34884],
    [18, 39528],
    [19, 44460],
    [20, 50400],
    [21, 56700],
    [22, 63360],
    [23, 74520],
    [24, 86400],
    [25, 99000],
    [26, 112320],
    [27, 131220],
    [28, 151200],
    [29, 172260],
    [30, 194400],
    [31, 223200],
    [32, 253440],
    [33, 285120],
    [34, 318240],
    [35, 352800],
    [36, 388800],
    [37, 432900],
    [38, 478800],
    [39, 526500],
    [40, 576000],
    [41, 627300],
    [42, 680400],
    [43, 735300],
    [44, 792000],
    [45, 858600],
    [46, 927360],
    [47, 1015200],
    [48, 1105920],
    [49, 1199520],
    [50, 1305000]
]

upgrade = [
    [1, 2000],
    [2, 12750],
    [3, 50000],
    [4, 235000],
    [5, 600000],
    [6, 1275000],
    [7, 3000000],
    [8, 7000000],
    [9, 15000000],
    [10, 25000000]
]

ads = [
    [1, 'üìÉ –†–∞–∑–¥–∞—á–∞ –ª–∏—Å—Ç–æ–≤–æ–∫', 180, 10, 1, 2],
    [2, 'üñºÔ∏è –û–±—ä—è–≤–ª–µ–Ω–∏—è –Ω–∞ —â–∏—Ç-–ø–æ—Å—Ç–∞—Ö', 3000, 15, 3, 6],
    [3, 'üåê –ü–æ—Å—Ç—ã –≤ —Å–æ—Ü-—Å–µ—Ç—è—Ö', 32000, 20, 5, 12],
    [4, 'üéÆ –†–µ–∫–ª–∞–º–∞ –≤ –∏–≥—Ä–∞—Ö', 295000, 25, 10, 20],
    [5, 'üë§ –ö–æ–ª–ª–∞–± —Å –±–ª–æ–≥–µ—Ä–æ–º', 1630000, 30, 18, 30]
]


#for pc in prices:
#    print(f'    [{pc[0]}, {round(Decimal(str(pc[1]))*6*24*(5*pc[0]))}],')


#prices = []
#
#num = 1
#
#cash = 100
#
#old_income = 0
#
#old_cash = 0
#
#for i in range(0, 50):
#    income = round(cash/(20*1.4**(num**0.85)))
#    print(f'    [{num}, {income}, {cash}],', cash-old_cash, income-old_income)
#    prices.append([num, income, cash])
#    old_cash = cash
#    old_income = income
#    cash = round(100*1.4**(num**0.95))
#    num += 1
#
#print(round(prices[0][2]/(1*5*prices[0][1]) / 6, 2))
#print(round(prices[9][2]/(10*5*prices[9][1]) / 6, 2))
#print(round(prices[19][2]/(20*5*prices[19][1]) / 6, 2))
#print(round(prices[29][2]/(30*5*prices[29][1]) / 6, 2))
#print(round(prices[39][2]/(40*5*prices[39][1]) / 6, 2))
#print(round(prices[49][2]/(50*5*prices[49][1]) / 6, 2))


#for upd in update:
#    if upd[0] % 5 == 0:
#        print(upd[2] * 144)

#with open("commands.py", 'r', encoding='utf-8') as file:
#    text = file.read()
#
#text = text.replace('''await add_action(message.from_user.username, ''',
#            '''await add_action(message.from_user.id, ''')
#
#with open("commands.py", 'w', encoding='utf-8') as file:
#    file.write(text)


#my_pcs = []
#
#old = 0
#
#stime = 0
#
#percent = 0
#
#for pr in prices:
#    for upt in update:
#        if upt[0] == pr[0]:
#            income = 0
#            sell = 0
#            for pc in my_pcs:
#                income += Decimal(str(pc[1]))
#            while income < upt[2]:
#                sell += 1
#                del my_pcs[0]
#                my_pcs.append(prices[pr[0]-2])
#                income = 0
#                for pc in my_pcs:
#                    income += Decimal(str(pc[1]))
#                #print(f'–≠–ª–µ–º–µ–Ω—Ç –±—ã–ª —É–¥–∞–ª—ë–Ω, —Ç–µ–∫—É—â–∏–π –¥–æ—Ö–æ–¥: {income}\n')
#            for i in range(0, 5):
#                my_pcs.append(pr)
#            print(sell)
#            income = 0
#            for pc in my_pcs:
#                income += Decimal(str(pc[1]))
#            print(f'–î–æ—Ö–æ–¥: {income}')
#            print(pr[0], round(pr[2]/income / 6, 2), round(pr[2]/income / 6, 2)-old)
#            old = round(pr[2]/income / 6, 2)
#            print(percent)
#            stime += ((old * sell) + (old * 5)) - (((old * sell) + (old * 5)) / 100 * percent)
#            '''–í–†–ï–ú–Ø —Å –ù–ê–ß–ê–õ–ê –ò–ì–†–´'''
#            #print(stime)
#            '''–¶–ï–ù–´ –ù–ê –ê–ü–ì–†–ï–ô–î'''
#            #print(round(Decimal(str(1.5))*6*round(pr[2]/income / 6, 2)*income, 2))
#            if upt[0] % 10 == 0:
#                if upt[0]/10 != 1:
#                    percent -= ads[(upt[0]//10)-2][3]
#                percent += ads[(upt[0]//10)-1][3]
#            if upt[0] % 5 == 0:
#                percent += 5
#            input()


#income = 0
#
#for pc in prices:
#    for upt in update:
#        if upt[0] == pc[0]:
#            income += Decimal(str(pc[1]))*5
#            print(f'    [{upt[0]}, {round(income*12*Decimal(str((upt[0]*0.75))))}, {upt[2]}],') #–¶–µ–Ω–∞ –Ω–∞ —É–ª—É—á—à–µ–Ω–∏–µ (–æ–∫—Ä—É–≥–ª—è—Ç—å –≤ –±–æ–ª—å—à—É—é —Å—Ç–æ—Ä–æ–Ω—É)
#            #print(pc[0], income-upt[2], income, pc[1]*(upt[0]*5))


#for el in prices:
#    print(el[0], round(el[2]/(el[0]*5*el[1]) / 6, 2))
#    input()